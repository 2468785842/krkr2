@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Platform detection
if(@IOS@)
    set(platform_name ios)
    set(platform_spec_path ios)
elseif(@ANDROID@)
    set(platform_name android)
    set(platform_spec_path android/${ANDROID_ABI})
elseif(@WINDOWS@)
    set(platform_name win32)
    set(platform_spec_path win32)
elseif(@MACOSX@)
    set(platform_name mac)
    set(platform_spec_path mac)
elseif(@LINUX@)
    set(platform_name linux)
    set(platform_spec_path linux/64-bit)
endif()

# External dependencies
if(@BUILD_EXT_BOX2D@)
    find_dependency(box2d CONFIG)
endif()

if(@BUILD_EXT_CHIPMUNK@)
    find_dependency(unofficial-chipmunk CONFIG)
endif()

if(@BUILD_EXT_BULLET@)
    find_dependency(Bullet CONFIG)
endif()

if(@BUILD_EXT_FREETYPE2@)
    find_dependency(Freetype)
endif()

if(@BUILD_EXT_JPEG@)
    find_dependency(JPEG)
endif()

if(@BUILD_EXT_OPENSSL@)
    find_dependency(OpenSSL)
    add_library(ext_ssl ALIAS OpenSSL::SSL)
    add_library(ext_crypto ALIAS OpenSSL::Crypto)
endif()

if(@BUILD_EXT_TIFF@)
    find_dependency(TIFF)
endif()

if(@BUILD_EXT_WEBP@)
    find_dependency(WebP CONFIG)
endif()

find_dependency(PNG)

if(@BUILD_EXT_ZLIB@)
    find_dependency(ZLIB)
    add_library(ext_zlib ALIAS ZLIB::ZLIB)
endif()

if(@BUILD_EXT_UV@)
    find_dependency(libuv CONFIG)
endif()

if(@BUILD_EXT_WEBSOCKETS@)
    find_dependency(libwebsockets CONFIG)
endif()

if(@BUILD_EXT_CURL@)
    find_dependency(CURL)
endif()

# Linux-specific
if(@LINUX@)
    add_library(ext_fmod SHARED IMPORTED)

    set_target_properties(ext_fmod PROPERTIES
        INTERFACE_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_LIST_DIR}/linux-specific/fmod/include"
        IMPORTED_LOCATION "${CMAKE_CURRENT_LIST_DIR}/linux-specific/fmod/prebuilt/64-bit/libfmod.so"
    )

    find_dependency(Fontconfig)
    find_dependency(TIFF)
    find_dependency(Freetype)
    find_dependency(BZip2)
    find_dependency(PNG)
    find_dependency(GLEW)
    find_dependency(OpenGL)
    find_dependency(unofficial-sqlite3)
endif()

if (ANDROID)
    find_dependency(Ogg CONFIG)
    find_dependency(Vorbis CONFIG)
endif ()

# Windows-specific
if(@WINDOWS@)
    if(@BUILD_EXT_SQLITE@) # sqlite3 prebuilt only exists on Windows
        find_dependency(unofficial-sqlite3 CONFIG)
    endif()

    find_dependency(GLEW)
    find_dependency(Iconv)
    find_dependency(OpenAL CONFIG)
    find_dependency(mpg123 CONFIG)
    find_dependency(Ogg CONFIG)
    find_dependency(Vorbis CONFIG)
endif()

# Desktop platforms
if("@WINDOWS@" OR "@MACOSX@" OR "@LINUX@")
    find_dependency(glfw3 CONFIG)
endif()

# Import targets
include("${CMAKE_CURRENT_LIST_DIR}/cocos2dx-targets.cmake")

check_required_components(cocos2d)
check_required_components(external)
