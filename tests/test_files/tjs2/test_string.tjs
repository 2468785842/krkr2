
var str = "abc漢字";
var n1 = str.length;  // n には 5 が代入される
var n2 = "abc漢字".length; // これも同じく 5 が代入される

if( str != "abc漢字" ) {
	throw new Exception( "faild: str != \"abc漢字\"" );
}
if( n1 != 5 ) {
	throw new Exception( "faild: n1 != 5" );
}
if( n2 != 5 ) {
	throw new Exception( "faild: n2 != 5" );
}

var isSuccess = false;

str = "abcdef";
var c0 = str[0];  // 'a' が c に代入される
var c2 = str[2];  // 'c' が c に代入される

if( c0 != 'a' || c2 != 'c' ) {
	throw new Exception( "faild: c0 = str[0]" );
}

try{
	str[3] = 'A'; // 代入式は生成できないのでエラーになる
} catch {
	isSuccess = true;
}
if( isSuccess != true ) {
	Debug.message( "faild: str[3] = 'A'" );
}

var isSuccess = false;
try{
	var c100 = str[100]; // c 値が範囲外なのでエラーになる
} catch {
	isSuccess = true;
}
if( isSuccess != true ) {
	throw new Exception( "faild: c100 = str[100]" );
}

var c6 = str[6]; // 空文字 '' が代入される
if( c6 != '' ) {
	throw new Exception( "faild: c6 = str[6]" );
}

var c3 = str.charAt(3);
if( c3 != 'd' ) {
	throw new Exception( "faild: c3 = str.charAt(3)" );
}

str = "abcdefghijklabc";
var nfgh = str.indexOf("fgh"); // n には 5 が代入される
if( nfgh != 5 ) {
	throw new Exception( "faild: nfgh = str.indexOf(\"fgh\")" );
}
var nxyz = str.indexOf("xyz"); // n には -1 が代入される
if( nxyz != -1 ) {
	throw new Exception( "faild: nxyz = str.indexOf(\"xyz\")" );
}
var nabc = str.indexOf("abc",4);
if( nabc != 12 ) {
	throw new Exception( "faild: nabc = str.indexOf(\"abc\",4)" );
}
var lwr="ABCDEF".toLowerCase();
if( lwr != "abcdef" ) {
	throw new Exception( "faild: lwr=\"ABCDEF\".toLowerCase()" );
}
var upr="abcdef".toUpperCase();
if( upr != "ABCDEF" ) {
	throw new Exception( "faild: lwr=\"abcdef\".toUpperCase()" );
}

var ss="abcdefghijkl".substring(3,3);
if( ss != "def" ) {
	throw new Exception( "faild: ss=\"abcdefghijkl\".substring(3,3)" );
}
var ss2="abcdefghijkl".substr(3,3);
if( ss2 != "def" ) {
	throw new Exception( "faild: ss2=\"abcdefghijkl\".substr(3,3)" );
}

var formatted = "%04X %c %5d".sprintf(10, 'b', 30);
if( formatted != "000A b    30" ) {
	throw new Exception( "faild: formatted = \"%04X %c %5d\".sprintf(10, 'b', 30)" );
}
var replaced = "abcdef".replace(/cd/, "ab");
if( replaced != "ababef" ) {
	throw new Exception( "faild: replaced = \"abcdef\".replace(\"cd\", \"ab\")" );
}
